[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
# Keep only essential rules for a GitHub Action
extend-select = [
    "B",     # flake8-bugbear (catches common bugs)
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "RUF",   # ruff-specific rules
    "W",     # pycodestyle warnings
]

[tool.ruff.lint.isort]
known-first-party = ["review"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
    "too-many-nested-blocks",
    "line-too-long",  # handled by ruff
    "wrong-import-position",  # needed for tests
]

[tool.pylint.basic]
good-names = ["e", "g", "_"]

[tool.pylint.format]
max-line-length = 100

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--verbose --cov=./ --cov-report=term-missing"

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # skip assert statements in tests
